---
import { Code } from '@astrojs/starlight/components';
import { marked } from 'marked';

interface Props {
  content: string;
}

const { content } = Astro.props;

function convertMediaWikiLinks(text: string): string {
  return text.replace(
    /\[\[([^|\]#]+)(?:#([^\]]+))?(?:\|([^\]]+))?\]\]/g,
    (_, link, hash, text) => {
      const url = `/${link}${hash ? `#${hash}` : ''}`;
      return `[${text || link}](${url})`;
    }
  );
}

const processedContent = convertMediaWikiLinks(content);
const tokens = marked.lexer(processedContent);
---

{
  tokens.map((token) => {
    if (token.type === 'code') {
      return <Code code={token.text} lang={token.lang || 'text'} />;
    }
    return <Fragment set:html={marked.parser([token])} />;
  })
}